{"@ @ Cbool$/\\ @ Cbool$! | Vl2 @ @ Cmin$= @ Clist$ZIP @ @ Cpair$, Clist$NIL Vl2 Clist$NIL @ @ Cbool$/\\ @ Cbool$! | Vl1 @ @ Cmin$= @ Clist$ZIP @ @ Cpair$, Vl1 Clist$NIL Clist$NIL @ Cbool$! | Vx1 @ Cbool$! | Vl1 @ Cbool$! | Vx2 @ Cbool$! | Vl2 @ @ Cmin$= @ Clist$ZIP @ @ Cpair$, @ @ Clist$CONS Vx1 Vl1 @ @ Clist$CONS Vx2 Vl2 @ @ Clist$CONS @ @ Cpair$, Vx1 Vx2 @ Clist$ZIP @ @ Cpair$, Vl1 Vl2": "ZIP_def", "@ @ Cbool$/\\ @ @ Cmin$= @ Clist$UNZIP Clist$NIL @ @ Cpair$, Clist$NIL Clist$NIL @ Cbool$! | Vx @ Cbool$! | Vl @ @ Cmin$= @ Clist$UNZIP @ @ Clist$CONS Vx Vl @ @ Cpair$, @ @ Clist$CONS @ Cpair$FST Vx @ Cpair$FST @ Clist$UNZIP Vl @ @ Clist$CONS @ Cpair$SND Vx @ Cpair$SND @ Clist$UNZIP Vl": "UNZIP", "@ Cbool$! | Ve @ Cbool$! | VL @ @ Cmin$= @ @ Clist$UNIQUE Ve VL @ Cbool$? | VL1 @ Cbool$? | VL2 @ @ Cbool$/\\ @ @ Cmin$= @ @ Clist$APPEND @ @ Clist$APPEND VL1 @ @ Clist$CONS Ve Clist$NIL VL2 VL @ @ Cbool$/\\ @ Cbool$~ @ @ Cbool$IN Ve @ Clist$LIST_TO_SET VL1 @ Cbool$~ @ @ Cbool$IN Ve @ Clist$LIST_TO_SET VL2": "UNIQUE_DEF", "@ @ Cbool$/\\ @ @ Cmin$= @ Clist$TL Clist$NIL Clist$NIL @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ Clist$TL @ @ Clist$CONS Vh Vt Vt": "TL_DEF", "@ @ Cbool$/\\ @ Cbool$! | Vn @ @ Cmin$= @ @ Clist$TAKE Vn Clist$NIL Clist$NIL @ Cbool$! | Vn @ Cbool$! | Vx @ Cbool$! | Vxs @ @ Cmin$= @ @ Clist$TAKE Vn @ @ Clist$CONS Vx Vxs @ @ @ Cbool$COND @ @ Cmin$= Vn Cnum$0 Clist$NIL @ @ Clist$CONS Vx @ @ Clist$TAKE @ @ Carithmetic$- Vn @ Carithmetic$NUMERAL @ Carithmetic$BIT1 Carithmetic$ZERO Vxs": "TAKE_def", "@ @ Cbool$/\\ @ Cbool$! | Vacc @ @ Cmin$= @ @ Clist$SUM_ACC Clist$NIL Vacc Vacc @ Cbool$! | Vh @ Cbool$! | Vt @ Cbool$! | Vacc @ @ Cmin$= @ @ Clist$SUM_ACC @ @ Clist$CONS Vh Vt Vacc @ @ Clist$SUM_ACC Vt @ @ Carithmetic$+ Vh Vacc": "SUM_ACC_DEF", "@ @ Cbool$/\\ @ @ Cmin$= @ Clist$SUM Clist$NIL Cnum$0 @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ Clist$SUM @ @ Clist$CONS Vh Vt @ @ Carithmetic$+ Vh @ Clist$SUM Vt": "SUM", "@ @ Cbool$/\\ @ Cbool$! | VP @ Cbool$! | Vk @ @ Cmin$= @ @ @ Clist$splitAtPki VP Vk Clist$NIL @ @ Vk Clist$NIL Clist$NIL @ Cbool$! | VP @ Cbool$! | Vk @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ @ @ Clist$splitAtPki VP Vk @ @ Clist$CONS Vh Vt @ @ @ Cbool$COND @ @ VP Cnum$0 Vh @ @ Vk Clist$NIL @ @ Clist$CONS Vh Vt @ @ @ Clist$splitAtPki @ @ Ccombin$o VP Cnum$SUC | Vp | Vs @ @ Vk @ @ Clist$CONS Vh Vp Vs Vt": "splitAtPki_def", "@ @ Cbool$/\\ @ Cbool$! | Vx @ @ Cmin$= @ @ Clist$SNOC Vx Clist$NIL @ @ Clist$CONS Vx Clist$NIL @ Cbool$! | Vx @ Cbool$! | Vx' @ Cbool$! | Vl @ @ Cmin$= @ @ Clist$SNOC Vx @ @ Clist$CONS Vx' Vl @ @ Clist$CONS Vx' @ @ Clist$SNOC Vx Vl": "SNOC", "@ @ Cbool$/\\ @ Cbool$! | VR @ Cbool$! | Vl2 @ @ Cmin$= @ @ @ Clist$SHORTLEX VR Clist$NIL Vl2 @ Cbool$~ @ @ Cmin$= Vl2 Clist$NIL @ Cbool$! | VR @ Cbool$! | Vh1 @ Cbool$! | Vt1 @ Cbool$! | Vl2 @ @ Cmin$= @ @ @ Clist$SHORTLEX VR @ @ Clist$CONS Vh1 Vt1 Vl2 @ @ @ Clist$list_CASE Vl2 Cbool$F | Vh2 | Vt2 @ @ @ Cbool$COND @ @ Cprim_rec$< @ Clist$LENGTH Vt1 @ Clist$LENGTH Vt2 Cbool$T @ @ @ Cbool$COND @ @ Cmin$= @ Clist$LENGTH Vt1 @ Clist$LENGTH Vt2 @ @ @ Cbool$COND @ @ VR Vh1 Vh2 Cbool$T @ @ @ Cbool$COND @ @ Cmin$= Vh1 Vh2 @ @ @ Clist$SHORTLEX VR Vt1 Vt2 Cbool$F Cbool$F": "SHORTLEX_def", "@ @ Cmin$= Clist$SET_TO_LIST @ @ Crelation$WFREC @ Cmin$@ | VR @ @ Cbool$/\\ @ Crelation$WF VR @ Cbool$! | Vs @ @ Cmin$==> @ @ Cbool$/\\ @ Cpred_set$FINITE Vs @ Cbool$~ @ @ Cmin$= Vs Cpred_set$EMPTY @ @ VR @ Cpred_set$REST Vs Vs | VSET_TO_LIST | Va @ Ccombin$I @ @ @ Cbool$COND @ Cpred_set$FINITE Va @ @ @ Cbool$COND @ @ Cmin$= Va Cpred_set$EMPTY Clist$NIL @ @ Clist$CONS @ Cpred_set$CHOICE Va @ VSET_TO_LIST @ Cpred_set$REST Va Cbool$ARB": "SET_TO_LIST_primitive_def", "@ @ Cbool$/\\ @ @ Cmin$= @ Clist$REVERSE Clist$NIL Clist$NIL @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ Clist$REVERSE @ @ Clist$CONS Vh Vt @ @ Clist$APPEND @ Clist$REVERSE Vt @ @ Clist$CONS Vh Clist$NIL": "REVERSE_DEF", "@ @ Cbool$/\\ @ Cbool$! | Vacc @ @ Cmin$= @ @ Clist$REV Clist$NIL Vacc Vacc @ Cbool$! | Vh @ Cbool$! | Vt @ Cbool$! | Vacc @ @ Cmin$= @ @ Clist$REV @ @ Clist$CONS Vh Vt Vacc @ @ Clist$REV Vt @ @ Clist$CONS Vh Vacc": "REV_DEF", "@ Cbool$! | Vc @ Cbool$! | Vn @ Cbool$! | Vs @ @ Cmin$= @ @ @ Clist$PAD_RIGHT Vc Vn Vs @ @ Clist$APPEND Vs @ @ Clist$GENLIST @ Ccombin$K Vc @ @ Carithmetic$- Vn @ Clist$LENGTH Vs": "PAD_RIGHT", "@ Cbool$! | Vc @ Cbool$! | Vn @ Cbool$! | Vs @ @ Cmin$= @ @ @ Clist$PAD_LEFT Vc Vn Vs @ @ Clist$APPEND @ @ Clist$GENLIST @ Ccombin$K Vc @ @ Carithmetic$- Vn @ Clist$LENGTH Vs Vs": "PAD_LEFT", "@ @ Cbool$/\\ @ Cbool$! | Vf @ @ Cmin$= @ @ Clist$OPT_MMAP Vf Clist$NIL @ Coption$SOME Clist$NIL @ Cbool$! | Vf @ Cbool$! | Vh0 @ Cbool$! | Vt0 @ @ Cmin$= @ @ Clist$OPT_MMAP Vf @ @ Clist$CONS Vh0 Vt0 @ @ Coption$OPTION_BIND @ Vf Vh0 | Vh @ @ Coption$OPTION_BIND @ @ Clist$OPT_MMAP Vf Vt0 | Vt @ Coption$SOME @ @ Clist$CONS Vh Vt": "OPT_MMAP_def", "@ Cbool$! | Vl @ @ Cmin$= @ Clist$oHD Vl @ @ @ Clist$list_CASE Vl Coption$NONE | Vh | Vv1 @ Coption$SOME Vh": "oHD_def", "@ @ Cbool$/\\ @ Cbool$! | Vn @ @ Cmin$= @ @ Clist$oEL Vn Clist$NIL Coption$NONE @ Cbool$! | Vn @ Cbool$! | Vx @ Cbool$! | Vxs @ @ Cmin$= @ @ Clist$oEL Vn @ @ Clist$CONS Vx Vxs @ @ @ Cbool$COND @ @ Cmin$= Vn Cnum$0 @ Coption$SOME Vx @ @ Clist$oEL @ @ Carithmetic$- Vn @ Carithmetic$NUMERAL @ Carithmetic$BIT1 Carithmetic$ZERO Vxs": "oEL_def", "@ @ Cbool$/\\ @ @ Cmin$= @ Clist$NULL Clist$NIL Cbool$T @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ Clist$NULL @ @ Clist$CONS Vh Vt Cbool$F": "NULL_DEF", "@ @ Cbool$/\\ @ @ Cmin$= @ Clist$nub Clist$NIL Clist$NIL @ Cbool$! | Vx @ Cbool$! | Vl @ @ Cmin$= @ Clist$nub @ @ Clist$CONS Vx Vl @ @ @ Cbool$COND @ @ Cbool$IN Vx @ Clist$LIST_TO_SET Vl @ Clist$nub Vl @ @ Clist$CONS Vx @ Clist$nub Vl": "nub_def", "@ @ Cbool$/\\ @ Cbool$! | Vf @ @ Cmin$= @ @ Clist$MAP Vf Clist$NIL Clist$NIL @ Cbool$! | Vf @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ @ Clist$MAP Vf @ @ Clist$CONS Vh Vt @ @ Clist$CONS @ Vf Vh @ @ Clist$MAP Vf Vt": "MAP", "@ @ Cbool$/\\ @ Cbool$! | Ve @ Cbool$! | Vn @ @ Cmin$= @ @ @ Clist$LUPDATE Ve Vn Clist$NIL Clist$NIL @ @ Cbool$/\\ @ Cbool$! | Ve @ Cbool$! | Vx @ Cbool$! | Vl @ @ Cmin$= @ @ @ Clist$LUPDATE Ve Cnum$0 @ @ Clist$CONS Vx Vl @ @ Clist$CONS Ve Vl @ Cbool$! | Ve @ Cbool$! | Vn @ Cbool$! | Vx @ Cbool$! | Vl @ @ Cmin$= @ @ @ Clist$LUPDATE Ve @ Cnum$SUC Vn @ @ Clist$CONS Vx Vl @ @ Clist$CONS Vx @ @ @ Clist$LUPDATE Ve Vn Vl": "LUPDATE_def", "@ @ Cbool$/\\ @ Cbool$! | VR @ Cbool$! | Vx @ Cbool$! | Vy @ @ Cmin$= @ @ @ @ Clist$LRC VR Clist$NIL Vx Vy @ @ Cmin$= Vx Vy @ Cbool$! | VR @ Cbool$! | Vh @ Cbool$! | Vt @ Cbool$! | Vx @ Cbool$! | Vy @ @ Cmin$= @ @ @ @ Clist$LRC VR @ @ Clist$CONS Vh Vt Vx Vy @ @ Cbool$/\\ @ @ Cmin$= Vx Vh @ Cbool$? | Vz @ @ Cbool$/\\ @ @ VR Vx Vz @ @ @ @ Clist$LRC VR Vt Vz Vy": "LRC_def", "@ @ Cbool$/\\ @ Cbool$! | VR @ Cbool$! | Vl2 @ @ Cmin$= @ @ @ Clist$LLEX VR Clist$NIL Vl2 @ Cbool$~ @ @ Cmin$= Vl2 Clist$NIL @ Cbool$! | VR @ Cbool$! | Vh1 @ Cbool$! | Vt1 @ Cbool$! | Vl2 @ @ Cmin$= @ @ @ Clist$LLEX VR @ @ Clist$CONS Vh1 Vt1 Vl2 @ @ @ Clist$list_CASE Vl2 Cbool$F | Vh2 | Vt2 @ @ @ Cbool$COND @ @ VR Vh1 Vh2 Cbool$T @ @ @ Cbool$COND @ @ Cmin$= Vh1 Vh2 @ @ @ Clist$LLEX VR Vt1 Vt2 Cbool$F": "LLEX_def", "@ Cbool$? | Vrep @ @ Cbool$TYPE_DEFINITION | Va0' @ Cbool$! | V'list' @ @ Cmin$==> @ Cbool$! | Va0' @ @ Cmin$==> @ @ Cbool$\\/ @ @ Cmin$= Va0' @ @ @ Cind_type$CONSTR Cnum$0 Cbool$ARB | Vn Cind_type$BOTTOM @ Cbool$? | Va0 @ Cbool$? | Va1 @ @ Cbool$/\\ @ @ Cmin$= Va0' @ @ | Va0 | Va1 @ @ @ Cind_type$CONSTR @ Cnum$SUC Cnum$0 Va0 @ @ Cind_type$FCONS Va1 | Vn Cind_type$BOTTOM Va0 Va1 @ V'list' Va1 @ V'list' Va0' @ V'list' Va0' Vrep": "list_TY_DEF", "@ @ Cbool$/\\ @ Cbool$! | Vx @ @ Cmin$= @ @ Clist$LIST_TO_SET Clist$NIL Vx Cbool$F @ Cbool$! | Vh @ Cbool$! | Vt @ Cbool$! | Vx @ @ Cmin$= @ @ Clist$LIST_TO_SET @ @ Clist$CONS Vh Vt Vx @ @ Cbool$\\/ @ @ Cmin$= Vx Vh @ @ Clist$LIST_TO_SET Vt Vx": "LIST_TO_SET_DEF", "@ @ Cbool$/\\ @ Cbool$! | Vf @ @ Cmin$= @ @ Clist$list_size Vf Clist$NIL Cnum$0 @ Cbool$! | Vf @ Cbool$! | Va0 @ Cbool$! | Va1 @ @ Cmin$= @ @ Clist$list_size Vf @ @ Clist$CONS Va0 Va1 @ @ Carithmetic$+ @ Carithmetic$NUMERAL @ Carithmetic$BIT1 Carithmetic$ZERO @ @ Carithmetic$+ @ Vf Va0 @ @ Clist$list_size Vf Va1": "list_size_def", "@ Cbool$! | Vf @ Cbool$! | Vxs @ Cbool$! | Vys @ @ Cmin$= @ @ @ Clist$LIST_LIFT2 Vf Vxs Vys @ @ Clist$LIST_APPLY @ @ Clist$MAP Vf Vxs Vys": "LIST_LIFT2_def", "@ Cbool$! | Vm1 @ Cbool$! | Vm2 @ @ Cmin$= @ @ Clist$LIST_IGNORE_BIND Vm1 Vm2 @ @ Clist$LIST_BIND Vm1 @ Ccombin$K Vm2": "LIST_IGNORE_BIND_def", "@ Cbool$! | Vb @ @ Cmin$= @ Clist$LIST_GUARD Vb @ @ @ Cbool$COND Vb @ @ Clist$CONS Cone$one Clist$NIL Clist$NIL": "LIST_GUARD_def", "@ @ Cbool$/\\ @ Cbool$! | Vv @ Cbool$! | Vf @ @ Cmin$= @ @ @ Clist$list_CASE Clist$NIL Vv Vf Vv @ Cbool$! | Va0 @ Cbool$! | Va1 @ Cbool$! | Vv @ Cbool$! | Vf @ @ Cmin$= @ @ @ Clist$list_CASE @ @ Clist$CONS Va0 Va1 Vv Vf @ @ Vf Va0 Va1": "list_case_def", "@ Cbool$! | Vl @ Cbool$! | Vf @ @ Cmin$= @ @ Clist$LIST_BIND Vl Vf @ Clist$FLAT @ @ Clist$MAP Vf Vl": "LIST_BIND_def", "@ Cbool$! | Vfs @ Cbool$! | Vxs @ @ Cmin$= @ @ Clist$LIST_APPLY Vfs Vxs @ @ Clist$LIST_BIND Vfs @ @ Ccombin$C Clist$MAP Vxs": "LIST_APPLY_def", "@ @ Cbool$/\\ @ @ Cmin$= @ Clist$LENGTH Clist$NIL Cnum$0 @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ Clist$LENGTH @ @ Clist$CONS Vh Vt @ Cnum$SUC @ Clist$LENGTH Vt": "LENGTH", "@ @ Cbool$/\\ @ Cbool$! | Vn @ @ Cmin$= @ @ Clist$LEN Clist$NIL Vn Vn @ Cbool$! | Vh @ Cbool$! | Vt @ Cbool$! | Vn @ @ Cmin$= @ @ Clist$LEN @ @ Clist$CONS Vh Vt Vn @ @ Clist$LEN Vt @ @ Carithmetic$+ Vn @ Carithmetic$NUMERAL @ Carithmetic$BIT1 Carithmetic$ZERO": "LEN_DEF", "@ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ Clist$LAST @ @ Clist$CONS Vh Vt @ @ @ Cbool$COND @ @ Cmin$= Vt Clist$NIL Vh @ Clist$LAST Vt": "LAST_DEF", "@ @ Cbool$/\\ @ Cbool$! | Vl @ @ Cmin$= @ @ Clist$isPREFIX Clist$NIL Vl Cbool$T @ Cbool$! | Vh @ Cbool$! | Vt @ Cbool$! | Vl @ @ Cmin$= @ @ Clist$isPREFIX @ @ Clist$CONS Vh Vt Vl @ @ @ Clist$list_CASE Vl Cbool$F | Vh' | Vt' @ @ Cbool$/\\ @ @ Cmin$= Vh Vh' @ @ Clist$isPREFIX Vt Vt'": "isPREFIX", "@ Cbool$! | Vx @ @ Cmin$= @ Clist$INDEX_OF Vx @ @ Ccombin$o @ Coption$OPTION_MAP Cpair$FST @ @ Clist$INDEX_FIND Cnum$0 @ Cmin$= Vx": "INDEX_OF_def", "@ @ Cbool$/\\ @ Cbool$! | Vi @ Cbool$! | VP @ @ Cmin$= @ @ @ Clist$INDEX_FIND Vi VP Clist$NIL Coption$NONE @ Cbool$! | Vi @ Cbool$! | VP @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ @ @ Clist$INDEX_FIND Vi VP @ @ Clist$CONS Vh Vt @ @ @ Cbool$COND @ VP Vh @ Coption$SOME @ @ Cpair$, Vi Vh @ @ @ Clist$INDEX_FIND @ Cnum$SUC Vi VP Vt": "INDEX_FIND_def", "@ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ Clist$HD @ @ Clist$CONS Vh Vt Vh": "HD", "@ @ Cbool$/\\ @ Cbool$! | Vf @ Cbool$! | Vl @ @ Cmin$= @ @ @ Clist$GENLIST_AUX Vf Cnum$0 Vl Vl @ Cbool$! | Vf @ Cbool$! | Vn @ Cbool$! | Vl @ @ Cmin$= @ @ @ Clist$GENLIST_AUX Vf @ Cnum$SUC Vn Vl @ @ @ Clist$GENLIST_AUX Vf Vn @ @ Clist$CONS @ Vf Vn Vl": "GENLIST_AUX", "@ @ Cbool$/\\ @ Cbool$! | Vf @ @ Cmin$= @ @ Clist$GENLIST Vf Cnum$0 Clist$NIL @ Cbool$! | Vf @ Cbool$! | Vn @ @ Cmin$= @ @ Clist$GENLIST Vf @ Cnum$SUC Vn @ @ Clist$SNOC @ Vf Vn @ @ Clist$GENLIST Vf Vn": "GENLIST", "@ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ Clist$FRONT @ @ Clist$CONS Vh Vt @ @ @ Cbool$COND @ @ Cmin$= Vt Clist$NIL Clist$NIL @ @ Clist$CONS Vh @ Clist$FRONT Vt": "FRONT_DEF", "@ @ Cbool$/\\ @ Cbool$! | Vf @ Cbool$! | Ve @ @ Cmin$= @ @ @ Clist$FOLDR Vf Ve Clist$NIL Ve @ Cbool$! | Vf @ Cbool$! | Ve @ Cbool$! | Vx @ Cbool$! | Vl @ @ Cmin$= @ @ @ Clist$FOLDR Vf Ve @ @ Clist$CONS Vx Vl @ @ Vf Vx @ @ @ Clist$FOLDR Vf Ve Vl": "FOLDR", "@ @ Cbool$/\\ @ Cbool$! | Vf @ Cbool$! | Ve @ @ Cmin$= @ @ @ Clist$FOLDL Vf Ve Clist$NIL Ve @ Cbool$! | Vf @ Cbool$! | Ve @ Cbool$! | Vx @ Cbool$! | Vl @ @ Cmin$= @ @ @ Clist$FOLDL Vf Ve @ @ Clist$CONS Vx Vl @ @ @ Clist$FOLDL Vf @ @ Vf Ve Vx Vl": "FOLDL", "@ @ Cbool$/\\ @ @ Cmin$= @ Clist$FLAT Clist$NIL Clist$NIL @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ Clist$FLAT @ @ Clist$CONS Vh Vt @ @ Clist$APPEND Vh @ Clist$FLAT Vt": "FLAT", "@ Cbool$! | VP @ @ Cmin$= @ Clist$FIND VP @ @ Ccombin$o @ Coption$OPTION_MAP Cpair$SND @ @ Clist$INDEX_FIND Cnum$0 VP": "FIND_def", "@ @ Cbool$/\\ @ Cbool$! | VP @ @ Cmin$= @ @ Clist$FILTER VP Clist$NIL Clist$NIL @ Cbool$! | VP @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ @ Clist$FILTER VP @ @ Clist$CONS Vh Vt @ @ @ Cbool$COND @ VP Vh @ @ Clist$CONS Vh @ @ Clist$FILTER VP Vt @ @ Clist$FILTER VP Vt": "FILTER", "@ @ Cbool$/\\ @ Cbool$! | VP @ @ Cmin$= @ @ Clist$EXISTS VP Clist$NIL Cbool$F @ Cbool$! | VP @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ @ Clist$EXISTS VP @ @ Clist$CONS Vh Vt @ @ Cbool$\\/ @ VP Vh @ @ Clist$EXISTS VP Vt": "EXISTS_DEF", "@ @ Cbool$/\\ @ Cbool$! | VP @ @ Cmin$= @ @ Clist$EVERYi VP Clist$NIL Cbool$T @ Cbool$! | VP @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ @ Clist$EVERYi VP @ @ Clist$CONS Vh Vt @ @ Cbool$/\\ @ @ VP Cnum$0 Vh @ @ Clist$EVERYi @ @ Ccombin$o VP Cnum$SUC Vt": "EVERYi_def", "@ @ Cbool$/\\ @ Cbool$! | VP @ @ Cmin$= @ @ Clist$EVERY VP Clist$NIL Cbool$T @ Cbool$! | VP @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ @ Clist$EVERY VP @ @ Clist$CONS Vh Vt @ @ Cbool$/\\ @ VP Vh @ @ Clist$EVERY VP Vt": "EVERY_DEF", "@ @ Cbool$/\\ @ Cbool$! | Vl @ @ Cmin$= @ @ Clist$EL Cnum$0 Vl @ Clist$HD Vl @ Cbool$! | Vl @ Cbool$! | Vn @ @ Cmin$= @ @ Clist$EL @ Cnum$SUC Vn Vl @ @ Clist$EL Vn @ Clist$TL Vl": "EL", "@ @ Cbool$/\\ @ Cbool$! | VP @ @ Cmin$= @ @ Clist$dropWhile VP Clist$NIL Clist$NIL @ Cbool$! | VP @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ @ Clist$dropWhile VP @ @ Clist$CONS Vh Vt @ @ @ Cbool$COND @ VP Vh @ @ Clist$dropWhile VP Vt @ @ Clist$CONS Vh Vt": "dropWhile_def", "@ @ Cbool$/\\ @ Cbool$! | Vn @ @ Cmin$= @ @ Clist$DROP Vn Clist$NIL Clist$NIL @ Cbool$! | Vn @ Cbool$! | Vx @ Cbool$! | Vxs @ @ Cmin$= @ @ Clist$DROP Vn @ @ Clist$CONS Vx Vxs @ @ @ Cbool$COND @ @ Cmin$= Vn Cnum$0 @ @ Clist$CONS Vx Vxs @ @ Clist$DROP @ @ Carithmetic$- Vn @ Carithmetic$NUMERAL @ Carithmetic$BIT1 Carithmetic$ZERO Vxs": "DROP_def", "@ @ Cbool$/\\ @ Cbool$! | Vl @ @ Cmin$= @ @ Clist$APPEND Clist$NIL Vl Vl @ Cbool$! | Vl1 @ Cbool$! | Vl2 @ Cbool$! | Vh @ @ Cmin$= @ @ Clist$APPEND @ @ Clist$CONS Vh Vl1 Vl2 @ @ Clist$CONS Vh @ @ Clist$APPEND Vl1 Vl2": "APPEND", "@ @ Cbool$/\\ @ @ Cmin$= @ Clist$ALL_DISTINCT Clist$NIL Cbool$T @ Cbool$! | Vh @ Cbool$! | Vt @ @ Cmin$= @ Clist$ALL_DISTINCT @ @ Clist$CONS Vh Vt @ @ Cbool$/\\ @ Cbool$~ @ @ Cbool$IN Vh @ Clist$LIST_TO_SET Vt @ Clist$ALL_DISTINCT Vt": "ALL_DISTINCT"}